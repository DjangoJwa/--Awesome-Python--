# Number 타입은 숫자 형태로 이루어진 자료형을 말하며
# 정수(int), 실수(float), 복소수(complex)를 표현할 수 있다

# -- 정수(int)
a = 1
# 연산자 중 '대입 연산자'에 속함
a = int(1)
# 동적 타이핑 언어이므로 타입을 명시하지 않아도 자료형을 추론한다

a: int = 1
# 명시적으로 타입을 선언하여 정적 타이핑도 가능

a = 99999999999999999999999999
# 값의 제한이 없음

a = 999_999_999
# 숫자 상수의 가독성을 높이기 위해 밑줄 사용 가능

a = 0o14
# 8진수

a = 0x1f
# 16진수

# -- 실수(float)
a = 1.0
# Python에는 실수를 표현하기 위해 float 타입만 사용

a = 0.8e+15
a = 0.8e15
a = 0.8e-15
# e 표기법

# -- 복소수(complex)
a = 2 + 3j
# imaginary number를 표현하는 i 대신 j를 사용

print(a.conjugate())
# (2-3j)
# 켤레복소수 표현

print(abs(a))
# 3.605551275463989
# 복소수의 크기 표현

# -- 사칙연산
print(5 * 2 / 3 % 2 - 2.1 + 2.1)
# 기본적인 사칙연산들을 모두 지원
# 연산자 중 '산술 연산자'에 속함

print(5 / 2)
# 2.5
# 나눗셈의 몫. 나누어 떨어지더라도 결과값은 무조건 float 타입이며 true div라고 말함

print(5 // 2)
# 2
# 나눗셈의 몫에서 소숫점 아래 부분을 버리고 int 타입의 결과를 반환. floor div라고 말함

print(5 ** 2)
# 25
# 제곱
